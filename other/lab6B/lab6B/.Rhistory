iran2 <- read.csv("iran2.csv", header=T)
View(iran2)
iran <- read.csv("iran.csv", header=T)
View(iran)
nor <- read.csv("nor.csv", header=T)
View(nor)
names(iran)
iran <- read.csv("iran2.csv", header = TRUE)
names(iran)
iran$ahmadinejad
names(iran) <- c("province", "city", "ahmadinejad", "rezai", "karrubi", "mousavi", "total_votes_cast", "voided_votes", "legitimate_votes")
?write.csv
write.csv(iran, "iran.csv", row.names = FALSE)
iran <- read.csv("iran2.csv", header = TRUE)
names(iran)
iran <- read.csv("iran.csv", header = TRUE)
head(iran)
names(iran)
class(iran$ahmadinejad)
View(iran)
head)iran
head(iran)
class(iran$rezai)
class(iran$karrubi)
class(iran$mousavi)
class(iran$total_votes_cast)
class(iran$voided_votes)
class(iran$legitimate_votes)
n <- iran$ahmadinejad[1]
n
?element
?head
x iran$ahmadinejad[1]
x
x <- iran$ahmadinejad[1]
x
strsplit(as.character(x),'')
as.numeric(head(strsplit(as.character(x),'')[[1]],n=1))
as.numeric(tail(strsplit(as.character(x),'')[[1]],n=1))
x <- 34
as.numeric(tail(strsplit(as.character(x),'')[[1]],n=1))
as.numeric(head(strsplit(as.character(x),'')[[1]],n=1))
?stop
?match
which_digit = "first"
match(which_digit, c("first","last"))
which_digit = "last"
match(which_digit, c("first","last"))
which_digit = "second"
match(which_digit, c("first","last"))
?is.na
?sapply
?tapply
?sapply
get_digit <- function(x, which_digit = "first") {
if (is.na(match(which_digit, c("first", "last")))) {
stop("which_digit must be first or last")
}
if (which_digit == "first") {
as.numeric(head(strsplit(as.character(x),'')[[1]],n=1))
} else {
as.numeric(tail(strsplit(as.character(x),'')[[1]],n=1))
}
}
get_digit(iran$ahmadinejad)
g <- sapply(iran$ahmadinejad, FUN = get_digit)
dim(g)
length(g)
View(iran)
class(g[1])
get_digit <- function(x, which_digit = "first") {
if (is.na(match(which_digit, c("first", "last")))) {
stop("which_digit must be first or last")
}
if (which_digit == "first") {
as.integer(head(strsplit(as.character(x),'')[[1]],n=1))
} else {
as.integer(tail(strsplit(as.character(x),'')[[1]],n=1))
}
}
g <- sapply(iran$ahmadinejad, FUN = get_digit)
class(g)
table(g)
hist(g)
barplot(g)
barplot(table(g))
?chisq.test
table(g)
table(g)[,2]
table(g)[,1]
table(g)[1]
table9g
table(g)
?p
1:3
?log
p <- log10(1+1/1:9)
p
p <- log10(1+1/1:9)
chisq.test(table(g), p)
p
table(g)/dim(iran)[1]
chisq.test(table(g), p)
.05*350
dim(iran)
table(g)
a <- chisq.test(table(g), p)
names(a)
a$stat
a$par
a$obs
table(g)/dim(iran)[1]
obs <- table(g)
g)
obs <- table(g)
barplot(obs)
a <- chisq.test(obs, p)
a
?expected
expected <- p*n
expected
chistat <- sum(((obs - expected)^2)/expected)
chistat
expected
?pchisq
pchisq(chistat, df = 8, lower.tail = FALSE)
pchisq(chistat, df = 64, lower.tail = FALSE)
obs2 <- obs + (binomial(n = 100, p = .5) - 50)
obs2 <- expected + (rbinom(n = 100, p = .5) - 50)
?rbinom
obs2 <- expected + (rbinom(n = 100, size = 9, prob = .5) - 50)
length(expected)
rbinom(n = 100, size = 9, prob = .5)
obs2 <- expected + (rbinom(n = 9, size = 100, prob = .5) - 50)
obs
obs2
n <- dim(iran)[1]
n
expected <- p*n
expected
obs
chistat <- sum(((obs - expected)^2)/expected)
chistat
pchisq(chistat, df = 8, lower.tail = FALSE)
get_digit <- function(x, which_digit = "first") {
if (is.na(match(which_digit, c("first", "last")))) {
stop("which_digit must be first or last")
}
if (which_digit == "first") {
as.integer(head(strsplit(as.character(x),'')[[1]],n=1))
} else {
as.integer(tail(strsplit(as.character(x),'')[[1]],n=1))
}
}
iran <- read.csv("iran.csv", header = TRUE)
n <- iran$ahmadinejad
g <- sapply(iran$ahmadinejad, FUN = get_digit)
obs <- table(g)
barplot(obs)
n <- dim(iran)[1]
p <- log10(1+1/1:9)
obs/n
expected <- p*n
chistat <- sum(((obs - expected)^2)/expected)
pchisq(chistat, df = 8, lower.tail = FALSE)
?sapply
g <- sapply(iran$ahmadinejad, FUN = get_digit, which_digit = "last")
obs <- table(g)
barplot(obs)
names(iran)
g <- sapply(iran$total_votes_cast, FUN = get_digit)
obs <- table(g)
barplot(obs)
# get Benfords dist
n <- dim(iran)[1]
p <- log10(1+1/1:9)
obs/n
expected <- p*n
chistat <- sum(((obs - expected)^2)/expected)
pchisq(chistat, df = 8, lower.tail = FALSE)
names(iran)
g <- sapply(iran$legitimate_votes, FUN = get_digit)
obs <- table(g)
barplot(obs)
# get Benfords dist
n <- dim(iran)[1]
p <- log10(1+1/1:9)
obs/n
expected <- p*n
chistat <- sum(((obs - expected)^2)/expected)
pchisq(chistat, df = 8, lower.tail = FALSE)
@
g <- sapply(iran$total_votes_cast, FUN = get_digit)
obs <- table(g)
barplot(obs)
# get Benfords dist
n <- dim(iran)[1]
p <- log10(1+1/1:9)
obs/n
chistat <- sum(((obs - expected)^2)/expected)
expected <- p*n
pchisq(chistat, df = 8, lower.tail = FALSE)
nor <- read.csv("nor.csv", header = TRUE)
View(nor)
names(nor)
table(nor$KOMMNAVN)
length(table(nor$KOMMNAVN))
?aggregate
names(nor)
?aggregate
aggregate(SUM ~ KOMMNAVN, data = nor, FUN = sum)
4479+535+175+634+660+805+4859+1185+30+393+191+179
5191+524+496+384+645+5535+1784+90+204
h <- aggregate(SUM ~ KOMMNAVN, data = nor, FUN = sum)
head(h)
norway <- aggregate(SUM ~ KOMMNAVN, data = nor, FUN = sum)
dim(norway)
names(iran)
table(iran$province)
length(table(iran$province))
names(norway) <- c("province", "total_votes")
head(norway)
hist(total_votes)
hist(norway$total_votes)
min(norway$total_votes)
max(norway$total_votes)
write.csv(norway, "norway.csv", row.names = FALSE)
norway <- read.csv("norway.csv", header = TRUE)
get_digit <- function(x, which_digit = "first") {
if (is.na(match(which_digit, c("first", "last")))) {
stop("which_digit must be first or last")
}
if (which_digit == "first") {
as.integer(head(strsplit(as.character(x),'')[[1]],n=1))
} else {
as.integer(tail(strsplit(as.character(x),'')[[1]],n=1))
}
}
digits_iran <- sapply(norway$total_votes, FUN = get_digit)
obs <- table(digits_iran)
barplot(obs)
View(norway)
names(norway) <- c("county", "total_votes_cast")
write.csv(norway, "norway.csv", row.names = FALSE)
norway <- read.csv("norway.csv", header = TRUE)
head(norway)
get_digit <- function(x, which_digit = "first") {
if (is.na(match(which_digit, c("first", "last")))) {
stop("which_digit must be first or last")
}
if (which_digit == "first") {
as.integer(head(strsplit(as.character(x),'')[[1]],n=1))
} else {
as.integer(tail(strsplit(as.character(x),'')[[1]],n=1))
}
}
digits_norway <- sapply(norway$total_votes_cast, FUN = get_digit)
obs <- table(digits_norway)
barplot(obs)
n <- dim(norway)[1]
n
n <- dim(norway)[1]
expected <- benfords_p * n
chistat <- sum(((obs - expected)^2)/expected)
benfords_p <- log10(1 + 1/1:9)
expected <- benfords_p * n
chistat <- sum(((obs - expected)^2)/expected)
pchisq(chistat, df = 8, lower.tail = FALSE)
barplot(expected)
n <- dim(norway)[1]
expected <- benfords_p * n
chistat <- sum(((obs - expected)^2)/expected)
pchisq(chistat, df = 8, lower.tail = FALSE)
